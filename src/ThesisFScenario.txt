    ## Scenario settings
Scenario.name = Thesis_Scenario_%%Scenario.endTime%%_%%Group.router%%_%%Group2.nrofHosts%%_%%Group2.speed%%_%%Group2.bufferSize%%
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
# 43200s == 12h
#Scenario.endTime = [43200;86400;129600;172800;216000;259200;302400;345600;388800;]
Scenario.endTime = 172800

# "Bluetooth" interface for all nodes
btInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
btInterface.transmitSpeed = 250k
btInterface.transmitRange = 150

Scenario.nrofHostGroups = 2

## Group-specific settings:
# groupID : Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite

# All nodes have the bluetooth interface
Group.nrofInterfaces = 1
Group.interface1 = btInterface


Group.router = [AvavibilityRouter;DirectDeliveryRouter]
#4320 = 1 hr 12 min 
Group.msgTtl = 4320
AvavibilityRouter.replicaNo = 5    

#ProphetRouter.secondsInTimeUnit = 30

#Group1.groupID : st0
#Group1.nrofHosts: 1
#Group1.movementModel : StationaryMovement 
#Group1.speed:0.0,0.0
#Group1.bufferSize = 50M
#Group1.nodeLocation = 500,200

#Group2.groupID : st1
#Group2.nrofHosts: 1
#Group2.movementModel : StationaryMovement 
#Group2.speed:0.0,0.0
#Group2.bufferSize = 50M
#Group2.nodeLocation = 1000,500

Group1.groupID : st2
Group1.nrofHosts: 1
Group1.movementModel : StationaryMovement 
Group1.speed:0.0,0.0
Group1.bufferSize = 50M
Group1.nodeLocation = 2000,600

Group2.groupID : mv
Group2.nrofHosts: 35
Group2.movementModel : RandomWaypoint
Group2.speed:0.5,1.5
Group2.bufferSize = .0005M

## Message creation parameters 
# How many event generators
Events.nrof = 1
# Class of the first event generator
Events1.class = ExternalEventsQueue
Events1.filePath = /home/samsung/Downloads/OneSimulator/src/ee/A_5.txt
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
#Events1.interval = 25,35
# Message sizes (500kB - 1MB)
#Events1.size = 500k,1M
# range of message source/destination addresses
#Events1.hosts = 0,9
# Message ID prefix
#Events1.prefix = Ms

## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 4500, 3400
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 10

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 4

MapBasedMovement.mapFile1 = data/roads.wkt
MapBasedMovement.mapFile2 = data/main_roads.wkt
MapBasedMovement.mapFile3 = data/pedestrian_paths.wkt
MapBasedMovement.mapFile4 = data/shops.wkt

## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 1
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load
#Report.report1 = MessageStatsReport
#Report.report2 = ContactsPerHourReport
#Report.report3 = ConnectivityONEReport
Report.report1 = SuccsessOfAvailibility
SuccsessOfAvailibility.router = [AvavibilityRouter;DirectDeliveryRouter;]
## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true

## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$






